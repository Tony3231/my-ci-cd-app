<<<<<<< HEAD
plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
=======
/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
>>>>>>> 8aabe0ab384b7f07c49a61bff948ef2e44aeb7af
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

<<<<<<< HEAD
=======
// Apply a specific Java toolchain to ease working on different environments.
>>>>>>> 8aabe0ab384b7f07c49a61bff948ef2e44aeb7af
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
<<<<<<< HEAD
    mainClass = 'my.ci.cd.app.App'
}

jar {
    manifest {
        attributes(
            'Main-Class': 'my.ci.cd.app.App'
        )
    }
=======
    mainClass = 'myapp.pipeline.App'
>>>>>>> 8aabe0ab384b7f07c49a61bff948ef2e44aeb7af
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
